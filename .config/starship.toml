# Warning: This config does not include keys that have an unset value

# $all is shorthand for $username$hostname$localip$shlvl$singularity$kubernetes$directory$vcsh$git_branch$git_commit$git_state$git_metrics$git_status$hg_branch$docker_context$package$cmake$cobol$dart$deno$dotnet$elixir$elm$erlang$golang$helm$java$julia$kotlin$lua$nim$nodejs$ocaml$perl$php$pulumi$purescript$python$rlang$red$ruby$rust$scala$swift$terraform$vlang$vagrant$zig$nix_shell$conda$memory_usage$aws$gcloud$openstack$azure$env_var$crystal$custom$sudo$cmd_duration$line_break$jobs$battery$time$status$container$shell$character
format = """
[ $directory$git_branch$git_commit$git_status\
[ÓÇ∞](234)$fill[ÓÇ≤](234) \
$golang\
$rust\
$cmd_duration\
$status\
$hostname\
$time](bg:234)\
$line_break\
$shell$character"""
right_format = ''
continuation_prompt = '[‚àô‚àô‚àô](bright-black) '
scan_timeout = 30
command_timeout = 500
add_newline = true

[aws]
format = 'on [$symbol($profile )(\($region\) )(\[$duration\])]($style)'
symbol = '‚òÅÔ∏è  '
style = 'bold yellow'
disabled = true
expiration_symbol = 'X'

[aws.region_aliases]

[azure]
format = 'on [$symbol($subscription)]($style) '
symbol = 'Ô¥É '
style = 'blue bold'
disabled = true

[battery]
full_symbol = 'Ôï∏ '
charging_symbol = 'ÔñÉ '
discharging_symbol = 'ÔñÇ '
unknown_symbol = 'Ôïº '
empty_symbol = 'Ôñç '
disabled = true
format = '[$symbol$percentage]($style) '

[[battery.display]]
threshold = 10
style = 'red bold'

[character]
format = '$symbol '
success_symbol = '[‚ùØ](76)'
error_symbol = '[‚ùØ](bold bright-red)'
vicmd_symbol = '[‚ùÆ](bold bright-green)'
disabled = false

[cmake]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚ñ≥ '
style = 'bold blue'
disabled = true
detect_extensions = []
detect_files = [
    'CMakeLists.txt',
    'CMakeCache.txt',
]
detect_folders = []

[cmd_duration]
min_time = 2000
format = '‚è∞ [$duration]($style)(bg:234) '
style = 'yellow bold bg:234'
show_milliseconds = false
disabled = false
show_notifications = false
min_time_to_notify = 45000

[cobol]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚öôÔ∏è '
style = 'bold blue'
disabled = true
detect_extensions = [
    'cbl',
    'cob',
    'CBL',
    'COB',
]
detect_files = []
detect_folders = []

[conda]
truncation_length = 1
format = 'via [$symbol$environment]($style) '
symbol = 'üÖí '
style = 'green bold'
ignore_base = true
disabled = true

[container]
format = '[$symbol \[$name\]]($style) '
symbol = '‚¨¢'
style = 'red bold dimmed'
disabled = true

[crystal]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üîÆ '
style = 'bold red'
disabled = true
detect_extensions = ['cr']
detect_files = ['shard.yml']
detect_folders = []

[dart]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üéØ '
style = 'bold blue'
disabled = true
detect_extensions = ['dart']
detect_files = [
    'pubspec.yaml',
    'pubspec.yml',
    'pubspec.lock',
]
detect_folders = ['.dart_tool']

[deno]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'ü¶ï '
style = 'green bold'
disabled = true
detect_extensions = []
detect_files = [
    'deno.json',
    'deno.jsonc',
    'mod.ts',
    'deps.ts',
    'mod.js',
    'deps.js',
]
detect_folders = []

[directory]
truncation_length = 5
truncate_to_repo = false
fish_style_pwd_dir_length = 1
use_logical_path = true
#format = '[$read_only]($read_only_style)[$path_base]($style)[$last_component](39 bold bg:234) '
#repo_root_format = '[$read_only]($read_only_style)[$before_root_path]($style)[$repo_root]($repo_root_style)[$path_base]($style)[$last_component](39 bold bg:234) '
format = '[$read_only]($read_only_style)[$path]($style) '
repo_root_format = '[$read_only]($read_only_style)[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style) '
style = '31 bg:234'
disabled = false
read_only = '‚àÖ '
read_only_style = 'red bold bg:234'
repo_root_style = '39 bold bg:234'
truncation_symbol = ''
home_symbol = '~'
use_os_path_sep = true

[directory.substitutions]

[docker_context]
symbol = 'üê≥ '
style = 'blue bold'
format = 'via [$symbol$context]($style) '
only_with_files = true
disabled = true
detect_extensions = []
detect_files = [
    'docker-compose.yml',
    'docker-compose.yaml',
    'Dockerfile',
]
detect_folders = []

[dotnet]
format = 'via [$symbol($version )(üéØ $tfm )]($style)'
version_format = 'v${raw}'
symbol = '.NET '
style = 'blue bold'
heuristic = true
disabled = true
detect_extensions = [
    'csproj',
    'fsproj',
    'xproj',
]
detect_files = [
    'global.json',
    'project.json',
    'Directory.Build.props',
    'Directory.Build.targets',
    'Packages.props',
]
detect_folders = []

[elixir]
format = 'via [$symbol($version \(OTP $otp_version\) )]($style)'
version_format = 'v${raw}'
symbol = 'üíß '
style = 'bold purple'
disabled = true
detect_extensions = []
detect_files = ['mix.exs']
detect_folders = []

[elm]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üå≥ '
style = 'cyan bold'
disabled = true
detect_extensions = ['elm']
detect_files = [
    'elm.json',
    'elm-package.json',
    '.elm-version',
]
detect_folders = ['elm-stuff']

[env_var]

[erlang]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Óû± '
style = 'bold red'
disabled = true
detect_extensions = []
detect_files = [
    'rebar.config',
    'erlang.mk',
]
detect_folders = []

[fill]
style = 'fg:238'
symbol = '¬∑'
disabled = false

[gcloud]
format = 'on [$symbol$account(@$domain)(\($region\))]($style) '
symbol = '‚òÅÔ∏è  '
style = 'bold blue'
disabled = true

[gcloud.region_aliases]

[git_branch]
format = '[ÓÇ± ](fg:242 bg:234)[$branch]($style)(:[$remote]($style)) '
symbol = 'ÓÇ† '
style = '76 bg:234'
truncation_length = 9223372036854775807
truncation_symbol = '‚Ä¶'
only_attached = true
always_show_remote = false
disabled = false

[git_commit]
commit_hash_length = 7
format = '[ÓÇ± ](fg:242 bg:234)[[@](244 bg:234)$hash$tag]($style) '
style = '76 bg:234'
only_detached = true
disabled = false
tag_symbol = '#'
tag_disabled = false

[git_metrics]
added_style = 'bold bright-green'
deleted_style = 'bold bright-red'
only_nonzero_diffs = true
format = '([+$added]($added_style) )([-$deleted]($deleted_style) )'
disabled = true

[git_state]
rebase = 'REBASING'
merge = 'MERGING'
revert = 'REVERTING'
cherry_pick = 'CHERRY-PICKING'
bisect = 'BISECTING'
am = 'AM'
am_or_rebase = 'AM/REBASE'
style = 'bold yellow bg:234'
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = false

[git_status]
format = '$ahead_behind$all_status'
style = 'bg:234'
stashed = '[‚ÜØ$count ](yellow bg:234)'
ahead = '[‚á°$count ](76 bg:234)'
behind = '[‚á£$count ](purple bg:234)'
up_to_date = '[‚úî ](green bg:234)'
diverged = '[‚áû$ahead_count](76 bg:234)[‚áü$behind_count](purple bg:234) '
conflicted = '[=$count ](196 bg:234)'
deleted = '[-$count ](bright-red bg:234)'
renamed = '[¬ª$count ](178 bg:234)'
modified = '[*$count ](160 bg:234)'
staged = '[+$count ](178 bg:234)'
untracked = '[?$count ](39 bg:234)'
ignore_submodules = false
disabled = false

[golang]
#format = '[$symbol($version )]($style)'
format = '[$symbol]($style)'
version_format = 'v${raw}'
#symbol = 'üêπ '
symbol = 'Go '
style = 'cyan bg:234'
disabled = false
detect_extensions = ['go']
detect_files = [
    'go.mod',
    'go.sum',
    'glide.yaml',
    'Gopkg.yml',
    'Gopkg.lock',
    '.go-version',
]
detect_folders = ['Godeps']

[helm]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚éà '
style = 'bold white'
disabled = true
detect_extensions = []
detect_files = [
    'helmfile.yaml',
    'Chart.yaml',
]
detect_folders = []

[hg_branch]
symbol = 'ÓÇ† '
style = 'bold purple'
format = 'on [$symbol$branch]($style) '
truncation_length = 9223372036854775807
truncation_symbol = '‚Ä¶'
disabled = true

[hostname]
ssh_only = true
trim_at = '.'
format = '[$hostname]($style) '
style = 'red bold bg:234'
disabled = false

[java]
disabled = true
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
style = 'red dimmed'
symbol = '‚òï '
detect_extensions = [
    'java',
    'class',
    'jar',
    'gradle',
    'clj',
    'cljc',
]
detect_files = [
    'pom.xml',
    'build.gradle.kts',
    'build.sbt',
    '.java-version',
    'deps.edn',
    'project.clj',
    'build.boot',
]
detect_folders = []

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = '[$symbol$number]($style) '
symbol = '‚ú¶'
style = 'bold blue'
disabled = false

[julia]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‡ÆÉ '
style = 'bold purple'
disabled = true
detect_extensions = ['jl']
detect_files = [
    'Project.toml',
    'Manifest.toml',
]
detect_folders = []

[kotlin]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üÖ∫ '
style = 'bold blue'
kotlin_binary = 'kotlin'
disabled = true
detect_extensions = [
    'kt',
    'kts',
]
detect_files = []
detect_folders = []

[kubernetes]
symbol = '‚ò∏ '
format = '[$symbol$context( \($namespace\))]($style) in '
style = 'cyan bold'
disabled = true

[kubernetes.context_aliases]

[line_break]
disabled = false

[localip]
ssh_only = true
format = '[$localipv4]($style) '
style = 'yellow bold'
disabled = true

[lua]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üåô '
style = 'bold blue'
lua_binary = 'lua'
disabled = true
detect_extensions = ['lua']
detect_files = ['.lua-version']
detect_folders = ['lua']

[memory_usage]
threshold = 75
format = 'via $symbol[$ram( | $swap)]($style) '
style = 'white bold dimmed'
symbol = 'üêè '
disabled = true

[nim]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üëë '
style = 'yellow bold'
disabled = true
detect_extensions = [
    'nim',
    'nims',
    'nimble',
]
detect_files = ['nim.cfg']
detect_folders = []

[nix_shell]
format = 'via [$symbol$state( \($name\))]($style) '
symbol = '‚ùÑÔ∏è  '
style = 'bold blue'
impure_msg = 'impure'
pure_msg = 'pure'
disabled = true

[nodejs]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Óúò '
style = 'bold green'
disabled = true
not_capable_style = 'bold red'
detect_extensions = [
    'js',
    'mjs',
    'cjs',
    'ts',
]
detect_files = [
    'package.json',
    '.node-version',
    '.nvmrc',
]
detect_folders = ['node_modules']

[ocaml]
format = 'via [$symbol($version )(\($switch_indicator$switch_name\) )]($style)'
version_format = 'v${raw}'
global_switch_indicator = ''
local_switch_indicator = '*'
symbol = 'üê´ '
style = 'bold yellow'
disabled = true
detect_extensions = [
    'opam',
    'ml',
    'mli',
    're',
    'rei',
]
detect_files = [
    'dune',
    'dune-project',
    'jbuild',
    'jbuild-ignore',
    '.merlin',
]
detect_folders = [
    '_opam',
    'esy.lock',
]

[openstack]
format = 'on [$symbol$cloud(\($project\))]($style) '
symbol = '‚òÅÔ∏è  '
style = 'bold yellow'
disabled = true

[package]
format = 'is [$symbol$version]($style) '
symbol = 'üì¶ '
style = '208 bold'
display_private = false
disabled = true
version_format = 'v${raw}'

[perl]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üê™ '
style = '149 bold'
disabled = true
detect_extensions = [
    'pl',
    'pm',
    'pod',
]
detect_files = [
    'Makefile.PL',
    'Build.PL',
    'cpanfile',
    'cpanfile.snapshot',
    'META.json',
    'META.yml',
    '.perl-version',
]
detect_folders = []

[php]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üêò '
style = '147 bold'
disabled = true
detect_extensions = ['php']
detect_files = [
    'composer.json',
    '.php-version',
]
detect_folders = []

[pulumi]
format = 'via [$symbol($username@)$stack]($style) '
version_format = 'v${raw}'
symbol = 'ÔÜ≤ '
style = 'bold 5'
disabled = true

[purescript]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '<=> '
style = 'bold white'
disabled = true
detect_extensions = ['purs']
detect_files = ['spago.dhall']
detect_folders = []

[python]
pyenv_version_name = false
pyenv_prefix = 'pyenv '
python_binary = [
    'python',
    'python3',
    'python2',
]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = 'v${raw}'
style = 'yellow bold'
symbol = 'üêç '
disabled = true
detect_extensions = ['py']
detect_files = [
    'requirements.txt',
    '.python-version',
    'pyproject.toml',
    'Pipfile',
    'tox.ini',
    'setup.py',
    '__init__.py',
]
detect_folders = []

[red]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üî∫ '
style = 'red bold'
disabled = true
detect_extensions = [
    'red',
    'reds',
]
detect_files = []
detect_folders = []

[rlang]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
style = 'blue bold'
symbol = 'üìê '
disabled = true
detect_extensions = [
    'R',
    'Rd',
    'Rmd',
    'Rproj',
    'Rsx',
]
detect_files = ['.Rprofile']
detect_folders = ['.Rproj.user']

[ruby]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üíé '
style = 'bold red'
disabled = true
detect_extensions = ['rb']
detect_files = [
    'Gemfile',
    '.ruby-version',
]
detect_folders = []
detect_variables = [
    'RUBY_VERSION',
    'RBENV_VERSION',
]

[rust]
#format = '[$symbol($version )]($style)'
format = '$symbol'
version_format = 'v${raw}'
symbol = 'ü¶Ä '
style = 'cyan bg:234'
disabled = false
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []

[scala]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
disabled = true
style = 'red bold'
symbol = 'üÜÇ '
detect_extensions = [
    'sbt',
    'scala',
]
detect_files = [
    '.scalaenv',
    '.sbtenv',
    'build.sbt',
]
detect_folders = ['.metals']

[shell]
format = '[$indicator]($style) '
bash_indicator = '[bash](bright-green bold)'
fish_indicator = '[fish](bright-yellow bold)'
zsh_indicator = '[zsh](bright-blue bold)'
powershell_indicator = 'psh'
ion_indicator = 'ion'
elvish_indicator = 'esh'
tcsh_indicator = 'tsh'
nu_indicator = 'nu'
xonsh_indicator = 'xsh'
cmd_indicator = 'cmd'
unknown_indicator = ''
style = 'white'
disabled = false

[shlvl]
threshold = 2
format = '[$symbol$shlvl]($style) '
symbol = '‚ÜïÔ∏è  '
repeat = false
style = 'bold yellow'
disabled = true

[singularity]
symbol = ''
format = '[$symbol\[$env\]]($style) '
style = 'blue bold dimmed'
disabled = true

[status]
format = '$symbol '
#symbol = '‚úñ '
symbol = '[‚úò](bold red bg:234) '
#success_symbol = '‚úîÔ∏è'
success_symbol = '[‚úî](green bg:234) '
not_executable_symbol = 'üö´ '
not_found_symbol = 'üîç '
sigint_symbol = '[INT]($style)'
signal_symbol = '[SIG$signal_name]($style)'
style = 'bold red bg:234'
map_symbol = true
recognize_signal_code = true
pipestatus = true
pipestatus_separator = '|'
pipestatus_format = '\($pipestatus\) => $symbol[$common_meaning]($style)$signal_symbol$maybe_int '
disabled = false

[sudo]
format = '[as $symbol]($style)'
symbol = 'üßô '
style = 'bold blue'
allow_windows = false
disabled = true

[swift]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üê¶ '
style = 'bold 202'
disabled = true
detect_extensions = ['swift']
detect_files = ['Package.swift']
detect_folders = []

[terraform]
format = 'via [$symbol$workspace]($style) '
version_format = 'v${raw}'
symbol = 'üí† '
style = 'bold 105'
disabled = true
detect_extensions = [
    'tf',
    'tfplan',
    'tfstate',
]
detect_files = []
detect_folders = ['.terraform']

[time]
format = '[$time ]($style)'
time_format = '%H:%M:%S'
style = '66 bg:234'
use_12hr = false
disabled = false
utc_time_offset = 'local'
time_range = '-'

[username]
format = '[$user]($style) in '
style_root = 'red bold'
style_user = 'yellow bold'
show_always = false
disabled = false

[vagrant]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚ç± '
style = 'cyan bold'
disabled = true
detect_extensions = []
detect_files = ['Vagrantfile']
detect_folders = []

[vcsh]
symbol = ''
style = 'bold yellow'
format = 'vcsh [$symbol$repo]($style) '
disabled = true

[vlang]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'V '
style = 'blue bold'
disabled = true
detect_extensions = ['v']
detect_files = [
    'v.mod',
    'vpkg.json',
    '.vpkg-lock.json',
]
detect_folders = []

[zig]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚ÜØ '
style = 'bold yellow'
disabled = true
detect_extensions = ['zig']
detect_files = []
detect_folders = []

[custom]
